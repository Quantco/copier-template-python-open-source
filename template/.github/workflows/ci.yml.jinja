{%- raw -%}
name: CI
on:
  pull_request:
  push:
    branches:
      - main

# Automatically stop old builds on the same branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre-commit:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up pixi
        uses: prefix-dev/setup-pixi@0f64e482e3d251f735019b1bc7fb0413ead75b2c # v0.8.2
        with:
          environments: default lint
      - name: pre-commit
        run: pixi run pre-commit-run --color=always --show-diff-on-failure
{%- endraw %}

  pytest:
    timeout-minutes: 30
    runs-on: {% raw %}${{ matrix.os }}{% endraw %}
    strategy:
      fail-fast: false
      matrix:
{%- set python_versions = ["py38", "py39", "py310", "py311", "py312"] %}
{%- set minimal_version_index = python_versions.index(minimal_python_version) %}
        environment:
        {%- for python_version in python_versions[minimal_version_index:] %}
          - {{ python_version }}
        {%- endfor %}
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest{% raw %}
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Set up pixi
        uses: prefix-dev/setup-pixi@0f64e482e3d251f735019b1bc7fb0413ead75b2c # v0.8.2
        with:
          environments: ${{ matrix.environment }}
      - name: Install repository
        run: pixi run -e ${{ matrix.environment }} postinstall
      - name: Run pytest
        run: pixi run -e ${{ matrix.environment }} test-coverage --color=yes
{%- endraw %}
